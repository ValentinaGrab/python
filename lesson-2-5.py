#Создать список, содержащий цены на товары (10–20 товаров), например:
#[57.8, 46.51, 97, ...]
#Вывести на экран эти цены через запятую в одну строку,
# цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
#Вывести цены, отсортированные по возрастанию, новый список не создавать
#(доказать, что объект списка после сортировки остался тот же).
#Создать новый список, содержащий те же цены, но отсортированные по убыванию.
#Вывести цены пяти самых дорогих товаров.
#Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
all_prices = []
price_list = [57.8, 46.51, 97, 66.03, 76.32, 34.0, 13.89, 22.22]
for i in range(len(price_list)):
    rub = int(price_list[i])
    kop = int(price_list[i] % 1 * 100)
    price_in_format = f'{rub} rub {kop:02d} kk,'
    price_list[i] = price_in_format
print(id(price_list))
print(' '.join(price_list))
#Вывести цены, отсортированные по возрастанию, новый список не создавать
price_list.sort()
print('Идентификатор списка после сортировки sort: ',id(price_list))
print(' '.join(price_list))
#доказать, что объект списка после сортировки остался тот же).
#Создать новый список, содержащий те же цены, но отсортированные по убыванию.
price_list_sorted = sorted(price_list,  reverse=True)
print(price_list_sorted)
#Вывести цены пяти самых дорогих товаров.
print(' '.join(price_list_sorted[:5]))
#Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
s = sorted(price_list_sorted[:5], reverse=False)
print(' '.join(s))
